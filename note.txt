TODO:
 refactor markov
ask:

 
UI:
 game:
  doc:
   intro
   links
  game:
   rps
   result
   stat
   history
  control:
   restart
   import button
   bot code
   bot stats
requirement:
 UI:
  control:
   choose bot
   choose param
   choose training
   choose choice
   submit or not
  view:
   see bot thoughts?
   see history
   see action


model:
 main:Class
  params:
   bot
   hand
   history:array(roundR)

    
  render:
   r,p,s -> set({hand:?})
   result <- 
 roundM:model
  params:
   p1,p2
  render:
   p1
   p2
   result
    


 controller:
  r,p,s
  setting
 view:
  human,robot
  win/lose
  setting
  history
model:
 main:
  
  
file:
 vender
 index.html
 //partial
 js
 css
 bots
 asset
 test
gulp:
 test (mocha)
 serve
 lint
 build:
  minify
 




use case:
 r,p,s:
  model:
   b: webpage calculate robot hand
  view:
   c: webpage animate the round
   d: webpage display result
   e: webpage update result history and stats
 2:
  a: user update setting
  b: webpage update setting
  c: webpage clears histoy and stats
  d: reinitialize 
  
rule:
 state: n
 (state,3^2) -> (state,3)
 (n*9)*log(n*3)

{
  "param":{
    "dimention":8,
    "rewardk1":0.9,
    "correct_k1":0.1,
    "correct_k2":0.4
  },
  "bots":[
  {
    "predict":0,
    "state":0,
    "food":0,
    "rule":[0,0,0,0,0,0,0,0]
  },
  {
    "predict":0,
    "state":0,
    "food":0,
    "rule":[0,0,0,0,0,0,0,0]
  }
  ],
  
}
0: lose
1: draw
2: win

0: rock
1: paper
2: scisser


